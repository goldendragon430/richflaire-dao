#pragma version 4
txn ApplicationID
int 0
==
bnz main_l12
txn OnCompletion
int OptIn
==
bnz main_l11
txn OnCompletion
int NoOp
==
txna ApplicationArgs 0
byte "stake"
==
&&
bnz main_l10
txn OnCompletion
int NoOp
==
txna ApplicationArgs 0
byte "rewards"
==
&&
bnz main_l9
txn OnCompletion
int NoOp
==
txna ApplicationArgs 0
byte "claim_rewards"
==
&&
bnz main_l8
txn OnCompletion
int NoOp
==
txna ApplicationArgs 0
byte "withdraw"
==
&&
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
byte "withdraw"
==
assert
txna ApplicationArgs 1
btoi
int 10
>
assert
byte "g_staked_amt"
byte "g_staked_amt"
app_global_get
txna ApplicationArgs 1
btoi
-
app_global_put
txn Sender
byte "l_staked_amt"
txn Sender
byte "l_staked_amt"
app_local_get
txna ApplicationArgs 1
btoi
-
app_local_put
int 1
return
main_l8:
txna ApplicationArgs 0
byte "claim_rewards"
==
assert
txna ApplicationArgs 1
btoi
int 1
>=
assert
byte "g_reward_amt"
byte "g_reward_amt"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
txn Sender
byte "l_claim_amt"
txn Sender
byte "l_claim_amt"
app_local_get
txna ApplicationArgs 1
btoi
+
app_local_put
int 1
return
main_l9:
txna ApplicationArgs 0
byte "rewards"
==
assert
txn Sender
byte "l_reward_amt"
txna ApplicationArgs 1
btoi
app_local_put
int 1
return
main_l10:
txna ApplicationArgs 0
byte "stake"
==
assert
txna ApplicationArgs 1
btoi
int 1000
>=
assert
byte "g_staked_amt"
byte "g_staked_amt"
app_global_get
txna ApplicationArgs 1
btoi
+
app_global_put
txn Sender
byte "l_staked_amt"
txn Sender
byte "l_staked_amt"
app_local_get
txna ApplicationArgs 1
btoi
+
app_local_put
txn Sender
byte "l_stake_time"
txna ApplicationArgs 2
btoi
app_local_put
txn Sender
byte "l_claim_amt"
int 0
app_local_put
int 1
return
main_l11:
int 1
return
main_l12:
txn NumAppArgs
int 0
==
assert
byte "g_staked_amt"
int 1
app_global_put
byte "g_reward_amt"
int 1
app_global_put
int 1
return